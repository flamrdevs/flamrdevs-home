---
import type { HTMLAttributes } from "astro/types";

import * as IconButtonCSS from "@flamrdevs/ui/core/IconButton.recipe.css";
import propsplit from "@flamrdevs/x/modules/propsplit";

import { getButtonAttrs } from "./attributes/button";
import type { ButtonOptions } from "./attributes/button";

import { getRootClassesx } from "./../classes";

type Props = HTMLAttributes<"button"> & ButtonOptions & IconButtonCSS.Variants & IconButtonCSS.InnerVariants & IconButtonCSS.ChildVariants;

const [classes, props] = getRootClassesx(Astro.props);

const [options, recipe, attrs] = propsplit(props, ["disabled"], IconButtonCSS.RootKeys);

const className = classes(IconButtonCSS.Root({ color: recipe.color, size: recipe.size }));
const innerClassName = IconButtonCSS.Inner({ color: recipe.color });
const childClassName = IconButtonCSS.Child({ size: recipe.size });
---

<button type="button" {...attrs} class={className} {...getButtonAttrs(options)}>
	<div class={innerClassName}>
		<div class={childClassName}>
			<slot />
		</div>
	</div>
</button>
