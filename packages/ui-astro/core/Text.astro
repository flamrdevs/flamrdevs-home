---
import * as Recipes from "@flamrdevs/ui/core/.recipes.css";
import * as Sprinkles from "@flamrdevs/ui/core/.sprinkles.css";
import propsplit from "@flamrdevs/x/modules/propsplit";

import { ClassesKeys, classex } from "./../classes";
import type * as Polymorphic from "./../polymorphic";

type Props<As extends Polymorphic.As = "div"> = Polymorphic.Props<
	As,
	{
		family?: Recipes.TypographyVariants["ff"];
		size?: Recipes.TypographyVariants["fz"];
		weight?: Recipes.TypographyVariants["fw"];
		align?: Recipes.TypographyVariants["ta"];
		italic?: boolean;
	} & Sprinkles.MarginShorthandsVariants &
		Sprinkles.PaddingShorthandsVariants
>;

const { as: As = "div", family = "sans", size = "3", weight = "4", align = ":--", italic, ...props } = Astro.props;

const [classes, margin, padding, attrs] = propsplit(props, ClassesKeys, Sprinkles.MarginKeys, Sprinkles.PaddingKeys);

const className = classex(
	[
		Recipes.Typography({
			ff: family,
			fz: size,
			fs: italic ? "i" : "n",
			fw: weight,
			ta: align,
		}),
		Sprinkles.Margin(margin),
		Sprinkles.Padding(padding),
	],
	classes
);
---

<As {...attrs as any} class={className}>
	<slot />
</As>
