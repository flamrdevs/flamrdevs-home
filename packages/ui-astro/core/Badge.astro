---
import type { HTMLAttributes } from "astro/types";

import * as BadgeCSS from "@flamrdevs/ui/core/Badge.recipe.css";
import propsplit from "@flamrdevs/x/modules/propsplit";

import { ClassesKeys, classex } from "./../classes";

type Props = HTMLAttributes<"span"> & BadgeCSS.Variants & BadgeCSS.InnerVariants & BadgeCSS.ChildVariants;

const [classes, recipe, attrs] = propsplit(Astro.props, ClassesKeys, [...BadgeCSS.RootKeys, ...BadgeCSS.ChildKeys]);

const className = classex(BadgeCSS.Root({ color: recipe.color, size: recipe.size }), classes);
const innerClassName = BadgeCSS.Inner({ color: recipe.color });
const childClassName = BadgeCSS.Child({ font: recipe.font, size: recipe.size });
---

<span {...attrs} class={className}>
	<div class={innerClassName}>
		<div class={childClassName}>
			<slot />
		</div>
	</div>
</span>
